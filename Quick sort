//program to implement Quicksort
#include <stdio.h>
int paretition(int a[],int low,int high);
void quicksort(int a[],int low,int high);
void main()
{
int a[20],n,i;
printf("enter size of the list");
scanf("%d",&n);
printf("enter elements");
for(i=0;i<n;i++)

{
scanf("%d",&a[i]);
}
printf("Before sorting elements are\n");
for(i=0;i<n;i++)
{
printf("%d\n",a[i]);
}
quicksort(a,0,n-1);
printf("After sorting elements are\n");
for(i=0;i<n;i++)
{
printf("%d\n",a[i]);
}
}
int partition(int a[],int low,int high)
{
int i=low,j=high,temp,pivot=a[low];
while(i<j)
{
while(a[i]<=pivot)
i=i+1;
while(a[j]>pivot)
j=j-1;
if(i<j)
{
temp=a[i];
a[i]=a[j];
a[j]=temp;
}
}
a[low]=a[j];
a[j]=pivot;
return j;
}
void quicksort(int a[],int low,int high)
{
int loc;
if(low<high)
{
loc=partition(a,low,high);
quicksort(a,low,loc-1);
quicksort(a,loc+1,high);
}
}
